name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # 匹配 1.0.0 格式的 tag

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Claude Forge v${{ steps.get_version.outputs.version }}
          body: |
            ## 🎉 Claude Forge v${{ steps.get_version.outputs.version }}

            ### 📥 Installation

            #### macOS (Apple Silicon)
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/claude-forge-aarch64-apple-darwin.tar.gz | tar xz
            sudo mv claude-forge /usr/local/bin/
            ```

            #### macOS (Intel)
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/claude-forge-x86_64-apple-darwin.tar.gz | tar xz
            sudo mv claude-forge /usr/local/bin/
            ```

            #### Linux (x86_64)
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/claude-forge-x86_64-unknown-linux-gnu.tar.gz | tar xz
            sudo mv claude-forge /usr/local/bin/
            ```

            ### ✨ What's New

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.

            ### 📚 Documentation

            - [Quick Start Guide](https://github.com/${{ github.repository }}/blob/main/QUICK_START.md)
            - [README](https://github.com/${{ github.repository }}/blob/main/README.md)
          draft: false
          prerelease: false

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      matrix:
        include:
          # macOS Apple Silicon
          - os: macos-latest
            target: aarch64-apple-darwin
            use-cross: false

          # macOS Intel
          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false

          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false

          # Linux ARM64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        if: matrix.use-cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build release binary
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Strip binary
        if: matrix.os != 'windows-latest'
        run: |
          strip target/${{ matrix.target }}/release/claude-forge

      - name: Create archive
        run: |
          cd target/${{ matrix.target }}/release
          tar czf claude-forge-${{ matrix.target }}.tar.gz claude-forge
          mv claude-forge-${{ matrix.target }}.tar.gz ${{ github.workspace }}/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./claude-forge-${{ matrix.target }}.tar.gz
          asset_name: claude-forge-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

  publish-crates:
    name: Publish to crates.io
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_TOKEN }}
        continue-on-error: true  # 如果已發布則繼續
